<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>openCV手部识别</title>
    <link href="/2022/10/05/openCV%E6%89%8B%E9%83%A8%E8%AF%86%E5%88%AB/"/>
    <url>/2022/10/05/openCV%E6%89%8B%E9%83%A8%E8%AF%86%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p>手势识别</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-keyword">import</span> cv2<span class="hljs-keyword">import</span> mediapipe <span class="hljs-keyword">as</span> mp<span class="hljs-keyword">import</span> time<span class="hljs-comment"># 连接摄像头</span>cap = cv2.VideoCapture(<span class="hljs-number">0</span>)mpHands = mp.solutions.handshands = mpHands.Hands()mpDraw = mp.solutions.drawing_utils<span class="hljs-comment"># 设置线条和点的样式</span>handLmsStyle = mpDraw.DrawingSpec(color=(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>), thickness=<span class="hljs-number">2</span>)  <span class="hljs-comment"># mpDraw.DrawingSpec(color=(GBR色值), 线条粗细程度)</span>handConStyle = mpDraw.DrawingSpec(color=(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>), thickness=<span class="hljs-number">5</span>)  <span class="hljs-comment"># mpDraw.DrawingSpec(color=(GBR色值), 线条粗细程度)</span>pTime = <span class="hljs-number">0</span>cTime = <span class="hljs-number">0</span><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    ret, img = cap.read()    <span class="hljs-keyword">if</span> ret:        imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)        result = hands.process(imgRGB)        <span class="hljs-comment"># print(result.multi_hand_landmarks)</span>        imgHeight = img.shape[<span class="hljs-number">0</span>]        imgWidth = img.shape[<span class="hljs-number">1</span>]        <span class="hljs-keyword">if</span> result.multi_hand_landmarks:            <span class="hljs-keyword">for</span> handLms <span class="hljs-keyword">in</span> result.multi_hand_landmarks:                <span class="hljs-comment"># 绘制检测到的手部21个点及线条</span>                mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS, handLmsStyle, handConStyle)                <span class="hljs-comment"># 获取21个点的坐标</span>                <span class="hljs-keyword">for</span> i, lm <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(handLms.landmark):                    xPos = <span class="hljs-built_in">int</span>(lm.x * imgWidth)                    yPos = <span class="hljs-built_in">int</span>(lm.y * imgHeight)                    <span class="hljs-comment"># cv2.putText(img, str(i), (xPos - 25, yPos + 5), cv2.FONT_HERSHEY_SIMPLEX, 0.4, (0, 0, 255), 2)</span>                    <span class="hljs-comment"># if i == 4:</span>                    <span class="hljs-comment">#     cv2.circle(img, (xPos, yPos), 15, (0, 0, 255), cv2.FILLED)</span>                    <span class="hljs-built_in">print</span>(i, xPos, yPos)        cTime = time.time()        fps = <span class="hljs-number">1</span> / (cTime - pTime)        pTime = cTime        cv2.putText(img, <span class="hljs-string">f&quot;FPS: <span class="hljs-subst">&#123;<span class="hljs-built_in">int</span>(fps)&#125;</span>&quot;</span>, (<span class="hljs-number">30</span>, <span class="hljs-number">50</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="hljs-number">1</span>, (<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), <span class="hljs-number">3</span>)        cv2.imshow(<span class="hljs-string">&#x27;img&#x27;</span>, img)    <span class="hljs-keyword">if</span> cv2.waitKey(<span class="hljs-number">1</span>) == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;q&#x27;</span>):        <span class="hljs-keyword">break</span></code></pre></div>]]></content>
    
    
    
    <tags>
      
      <tag>计算机视觉</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/05/hello-world/"/>
    <url>/2022/10/05/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo server</code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo generate</code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo deploy</code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
